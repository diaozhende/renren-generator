package ${package}.${moduleName}.controller;


import java.util.ArrayList;
import java.util.List;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import io.renren.modules.generator.service.impl.DbSpecialServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import com.dzd.utils.ResultCode;
import com.dzd.utils.ResultData;




/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service service = new ${className}ServiceImpl();

    /**
     * @author ${author}
     * @since ${date}
     * @Description: //TODO 查询数据列表
     */
    @RequestMapping(value="/list",method= RequestMethod.GET)
    public ResultData<List<${className}Entity>> list(){
        ResultData<List<${className}Entity>> resultData = new ResultData<List<${className}Entity>>();
        List<${className}Entity> List = new ArrayList<${className}Entity>();
        try {
            List = service.list();
            resultData.setCode(ResultCode.SUCCESS);
            resultData.setData(List);
            return resultData;
        } catch (Exception e) {
            e.printStackTrace();
            resultData.setCode(ResultCode.INTERNAL_SERVER_ERROR);
            resultData.setMessage(e.getMessage());
            return resultData;
        }
    }

    /**
     * @author ${author}
     * @since ${date}
     * @Description: //TODO 增加
     */
    @RequestMapping(value="/add",method= RequestMethod.POST)
    public ResultData<String> add(${className}Entity ${classname}){
        ResultData<String> resultData = new ResultData<String>();
        try {
            service.save( ${classname});
            resultData.setCode(ResultCode.SUCCESS);
            return resultData;
        } catch (Exception e) {
            resultData.setCode(ResultCode.INTERNAL_SERVER_ERROR);
            resultData.setMessage(e.getMessage());
            return resultData;
        }
    }

    /**
     * @author ${author}
     * @since ${date}
     * @Description: //TODO 根据id查询信息
     */
    @RequestMapping(value="/selectOne",method= RequestMethod.GET)
    public ResultData<${className}Entity> selectOne(int id){
        ResultData<${className}Entity> resultData = new ResultData<${className}Entity>();
            ${className}Entity pojo = new ${className}Entity();
        try {
            pojo = service.getById(id);
            resultData.setCode(ResultCode.SUCCESS);
            resultData.setData(pojo);
            return resultData;
        } catch (Exception e) {
            resultData.setCode(ResultCode.INTERNAL_SERVER_ERROR);
            resultData.setMessage(e.getMessage());
            return resultData;
        }
    }

    /**
     * @author ${author}
     * @since ${date}
     * @Description: //TODO 修改
     */
    @RequestMapping(value="/update",method= RequestMethod.POST)
    public ResultData<String> update(${className}Entity ${classname}){
        ResultData<String> resultData = new ResultData<String>();
        try {
            QueryWrapper<${className}Entity> queryWrapper = new QueryWrapper<${className}Entity>();
            queryWrapper.eq("","");
            service.update( ${classname},queryWrapper);
            resultData.setCode(ResultCode.SUCCESS);
            return resultData;
        } catch (Exception e) {
            resultData.setCode(ResultCode.INTERNAL_SERVER_ERROR);
            resultData.setMessage(e.getMessage());
            return resultData;
        }
    }

    /**
     * @author ${author}
     * @since ${date}
     * @Description: //TODO 删除
     */
    @RequestMapping(value="/delete",method= RequestMethod.GET)
    public ResultData<String> delete(int id){
        ResultData<String> resultData = new ResultData<String>();
        try {
            service.removeById(id);
            resultData.setCode(ResultCode.SUCCESS);
            return resultData;
        } catch (Exception e) {
            resultData.setCode(ResultCode.INTERNAL_SERVER_ERROR);
            resultData.setMessage(e.getMessage());
            return resultData;
        }
    }

}
